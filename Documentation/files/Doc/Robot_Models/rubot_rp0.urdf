<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rubot_mecanum.xacro            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rubot">
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.75 0.75 0.75 1.0"/>
  </material>

<!-- base_footprint reference frame without inertia is needed -->
  <link name="base_footprint"/>
<!-- base_link -->
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="0.23 0.12 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.0104" ixy="0" ixz="0" iyy="0.0292" iyz="0" izz="0.0375"/>
    </inertial>
  </link>
<!-- upper_left_wheel -->
  <joint name="upper_left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.07 0.1 0"/>
    <parent link="base_link"/>
    <child link="upper_left_wheel"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="upper_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/upper_left_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.000166" ixy="0" ixz="0" iyy="0.000303" iyz="0" izz="0.000166"/>
    </inertial>
  </link>
<!-- lower_left_wheel -->
  <joint name="lower_left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.085 0.1 0"/>
    <parent link="base_link"/>
    <child link="lower_left_wheel"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="lower_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/lower_left_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.000166" ixy="0" ixz="0" iyy="0.000303" iyz="0" izz="0.000166"/>
    </inertial>
  </link>
<!-- upper_right_wheel -->
  <joint name="upper_right_wheel_joint" type="continuous">
    <origin rpy="0 0 3.14" xyz="0.07 -0.1 0"/>
    <parent link="base_link"/>
    <child link="upper_right_wheel"/>
    <axis xyz="0 -1 0"/>
  </joint>
  <link name="upper_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/upper_right_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.000166" ixy="0" ixz="0" iyy="0.000303" iyz="0" izz="0.000166"/>
    </inertial>
  </link>
<!-- lower_right_wheel -->
  <joint name="lower_right_wheel_joint" type="continuous">
    <origin rpy="0 0 3.14" xyz="-0.085 -0.1 0"/>
    <parent link="base_link"/>
    <child link="lower_right_wheel"/>
    <axis xyz="0 -1 0"/>
  </joint>
  <link name="lower_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/lower_right_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="0.000166" ixy="0" ixz="0" iyy="0.000303" iyz="0" izz="0.000166"/>
    </inertial>
  </link> -->
<!-- 2D Camera as a mesh of actual PiCamera -->
  <joint name="joint_camera" type="fixed">
    <origin rpy="0 0 0" xyz="0.120 0.0 0.09"/>
    <parent link="base_link"/>
    <child link="camera"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="camera">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/piCamera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 1.570795 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 1.570795 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- LIDAR base_scan -->
  <link name="base_scan">
    <visual>
      <origin rpy="0 0 3.14" xyz="0 0 0.0"/>
      <geometry>
        <mesh filename="package://rubot_mecanum_description/meshes/rubot/Lidar.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <mass value="0.05"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="scan_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 3.14" xyz="0 0 0.15"/>
    <parent link="base_link"/>
    <child link="base_scan"/>
  </joint>
  <!-- Box part -->
  <joint name="joint_part" type="fixed">
    <origin rpy="0 0 0" xyz="-0.10 0.0 0.09"/>
    <parent link="base_link"/>
    <child link="part"/>
  </joint>
  <link name="part">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.025"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- Mecanum drive controller -->
  <gazebo>
    <plugin name="Mecanum_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <odometryRate>50.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelAcceleration>0.5</wheelAcceleration>
      <wheelTorque>1</wheelTorque>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftFrontJoint>upper_left_wheel_joint</leftFrontJoint>
      <rightFrontJoint>upper_right_wheel_joint</rightFrontJoint>
      <leftRearJoint>lower_left_wheel_joint</leftRearJoint>
      <rightRearJoint>lower_right_wheel_joint</rightRearJoint>
    </plugin>
  </gazebo>
  <!-- 2D Camera controller -->
  <gazebo reference="camera">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="front">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <visualize>false</visualize>
        <cameraName>rubot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Laser Distance Sensor YDLIDAR X4 controller-->
  <gazebo reference="base_scan">
    <sensor name="lds_lfcd_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>10</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for YDLIDAR X4
              is 1.5% at half range 4m (= 60mm, "+-160mm" accuracy at max. range 8m).
              A mean of 0.0m and stddev of 0.020m will put 99.7% of samples
              within 0.16m of the true reading. -->
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_lds_lfcd_controller">
        <!-- topicName>/gopigo/scan</topicName -->
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>
<!-- Gazebo colors have to be specified here with predefined Gazebo colors -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Yellow</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="base_scan">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="camera">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="part">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="upper_left_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <kp>1000</kp>
    <ki>100</ki>
    <kd>1</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  <gazebo reference="lower_left_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <kp>1000</kp>
    <ki>100</ki>
    <kd>1</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  <gazebo reference="upper_right_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <kp>1000</kp>
    <ki>100</ki>
    <kd>1</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  <gazebo reference="lower_right_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <kp>1000</kp>
    <ki>100</ki>
    <kd>1</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.5</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
</robot>
